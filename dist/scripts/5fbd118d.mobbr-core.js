"use strict";angular.module("mobbr.services.user",["mobbr.services.mbr-api","mobbr.services.timeout"]).factory("userSession",["$injector","$location","$window","$rootScope","userStorage","Msg","idleTimeout",function(a,b,c,d,e,f){function g(a){k.user=void 0,k.authenticated=!1,console.log("user logout"),d.$emit("userSession:logout"),a&&c.parent&&c.parent.postMessage&&c.parent.postMessage("logout","*")}function h(){console.log("reload route"),a.get("$route").reload()}function i(){g(!0)}function j(a,b){k.doLogin(b,!0)}var k={authenticated:!1,user:void 0,doLogin:function(a,b){k.authenticated=!0,k.user=a,console.log("user login"),d.$emit("userSession:login",a),b&&c.parent&&c.parent.postMessage&&c.parent.postMessage([this.user.username,this.user.email].join("|"),"*")},doLogout:g,authenticate:function(){var c=a.get("$route"),d=c.current&&c.current.$route;return console.log("authenticate user"),d&&d.authsettings&&d.authsettings.authenticated!==this.authenticated?(d.authsettings.redirectTo&&b.path(d.authsettings.redirectTo),this.authenticated===!1&&f.addNotification("Please login at the account menu"),console.log("user not authenticated"),!1):(console.log("user authenticated"),!0)}};return d.userSession=k,d.$on("idleTimeout:timeout",i),d.$on("userStorage:login-external",j),d.$on("userStorage:logout-external",i),d.$on("userStorage:saved",h),d.$on("userStorage:cleared",h),k}]).factory("HttpLoggedInInterceptor",["$injector","$q",function(a,b){return function(c){return c.then(function(){},function(c){var d=a.get("userSession");return null==c||null==c.status||401!==c.status&&0!==c.status||!d.authenticated||d.doLogout(!0),b.reject(c)}),c}}]).config(["$httpProvider",function(a){a.responseInterceptors.push("HttpLoggedInInterceptor")}]).directive("userRegister",["User","Msg","$routeParams",function(a,b,c){return{restrict:"A",scope:{},link:function(d){d.waiting=!1,d.email=c.email,d.register=function(){var c={email:d.email,username:d.username,password:d.password,password_control:d.password_control};d.waiting=!0,a.register(c,function(a){b.setResponseMessage("info","",a),d.waiting=!1,d.email="",d.username="",d.password="",d.password_control=""},function(a){b.setResponseMessage("error","Couldn't send information",a),d.waiting=!1})}}}}]),angular.module("mobbr.services.timeout",["ngStorage"]).factory("idleTimeout",["$rootScope","$timeout","$sessionStorage",function(a,b,c){function d(){c.idletime=0}function e(){c.idletime<k&&(k=0),k+=j,c.idletime=k,c.idletime>i&&(a.$emit("idleTimeout:timeout"),c.idletime=0),l===!0&&(h=b(e,j))}function f(){d(),l=!0,e()}function g(){l=!1,b.cancel(h)}var h,i=36e5,j=1e3,k=0,l=!1;return a.$on("userSession:login",f),a.$on("userSession:logout",g),{start:f,stop:g,reset:d}}]).directive("idleTimeout",["idleTimeout",function(a){return{restrict:"A",link:function(b,c){c.bind("mousemove keypress mousewheel wheel DOMMouseScroll",a.reset)}}}]),angular.module("mobbr.services.mbr-api",["ngResource"]).factory("User",["$resource",function(a){return a(api_url+"/api/user/:action",{},{setPassword:{method:"POST",params:{action:"update_password"},isArray:!1},register:{method:"PUT",params:{action:"register_user_send_login_link"},isArray:!1},recover:{method:"GET",params:{email:"email",username:"username",action:"send_login_link"},isArray:!1},login:{method:"PUT",params:{action:"password_login"},isArray:!1},get:{method:"GET",params:{action:"logged_in_user"},isArray:!1},save:{method:"POST",params:{action:"update_user"}},linkLogin:{method:"PUT",params:{action:"link_login"}},logout:{method:"DELETE",params:{action:"logout"}},updateEmail:{method:"POST",params:{action:"update_email"}},confirmEmail:{method:"POST",params:{action:"confirm_email"}},updatePassword:{method:"POST",params:{action:"update_password"}}})}]).factory("Dashboard",["$resource",function(a){return a(api_url+"/api/dashboard/:action",{},{getPayments:{method:"GET",params:{action:"type"},isArray:!1},savePayment:{method:"PUT",params:{action:"finalize_payments"}},deletePayment:{method:"POST",params:{action:"delete_payments"}},withdraw:{method:"POST",params:{action:"send_external_payment"}},paymentservices:{method:"GET",params:{action:"available_payment_services"}},getCurrencies:{method:"GET",params:{action:"currencies"},isArray:!1}})}]).factory("Domain",["$resource",function(a){return a(api_url+"/api/domain/:action",{},{getPayments:{method:"GET",params:{action:"payments"},isArray:!1},getLocations:{method:"GET",params:{action:"locations"},isArray:!1},getPersons:{method:"GET",params:{action:"persons"},isArray:!1},isDomainOwner:{method:"GET",params:{domain:"domain",action:"is_domain_owner"},isArray:!1},balances:{method:"GET",params:{domain:"domain",action:"balances"},isArray:!1},info:{method:"GET",params:{domain:"domain",action:"domain_info"},isArray:!1}})}]).factory("Claim",["$resource",function(a){return a(api_url+"/api/claim/:action",{},{paymentDescription:{method:"GET",params:{action:"payment_script"},isArray:!1},checkUrl:{method:"GET",params:{action:"check_url"},isArray:!1},unclaimedPayments:{method:"GET",params:{action:"unclaimed_payments"},isArray:!1},claim:{method:"POST",params:{action:"claim_url"}}})}]).factory("CreateButton",["$resource",function(a){return a(api_url+"/api/script/:action",{},{checkUrl:{method:"GET",params:{url:"url",action:"retrieve_script"}},storeJson:{method:"PUT",params:{action:"store_script"}},validateJson:{method:"GET",params:{json:"json",action:"validate_script"}}})}]).factory("Balances",["$resource",function(a){return a(api_url+"/api/dashboard/:action",{},{balance:{method:"GET",params:{action:"balance_totals"},isArray:!1},payments:{method:"GET",params:{action:"external_payments"},isArray:!1}})}]).factory("ExchangeRates",["$resource",function(a){return a(api_url+"/api/util/:action",{},{exchangerates:{method:"GET",params:{action:"forex_rates"},isArray:!1}})}]).factory("PaymentReciept",["$resource",function(a){return a(api_url+"/api/payment/:action",{},{getPaymentReciept:{method:"GET",params:{id:"id",action:"full_payment_data"},isArray:!1}})}]).factory("Url",["$resource",function(a){return a(api_url+"/api/url/:action",{},{getLocations:{method:"GET",params:{action:"locations"},isArray:!1},fullData:{method:"GET",params:{action:"full_url_data"},isArray:!1},balances:{method:"GET",params:{url:"url",action:"balances"},isArray:!1},personPayments:{method:"GET",params:{url:"url",action:"person_payments"},isArray:!1}})}]).factory("Util",["$resource",function(a){return a(api_url+"/api/util/:action",{},{currencies:{method:"GET",params:{action:"currencies"},isArray:!1},languages:{method:"GET",params:{action:"languages"},isArray:!1},timezones:{method:"GET",params:{action:"timezones"},isArray:!1}})}]).factory("Api",["$resource",function(a){return a(api_url+"/api/api/:action",{},{list:{method:"GET",params:{action:"list"},isArray:!1}})}]).factory("PaymentNetwork",["$resource",function(a){return a(api_url+"/api/payment_network/:action",{},{networks:{method:"GET",params:{action:"networks"}},accountAddresses:{method:"GET",params:{action:"account_addresses"}},newAccountAddress:{method:"PUT",params:{action:"new_account_address"}},supportedCurrencies:{method:"GET",params:{action:"supported_currencies"}},sendPayment:{method:"POST",params:{action:"send_payment"}}})}]).factory("Gateway",["$resource",function(a){return a(api_url+"/api/gateway/:action",{},{getPayment:{method:"GET",params:{action:"get_payment"}},registerPayment:{method:"PUT",params:{action:"register_payment"}},performPayment:{method:"PUT",params:{action:"perform_payment"}},analyzePayment:{method:"POST",params:{action:"analyze_payment"}}})}]),angular.module("mobbr.services.msg",[]).factory("Msg",function(){var a={addWarning:function(){this.message(arguments,"warning")},addError:function(){this.message(arguments,"error")},addNotification:function(){this.message(arguments,"info")},setResponseMessage:function(a,b,c){var d=null;null!=c&&(void 0!=c.message&&null!=c.message?(null!=c.message.text&&void 0!=c.message.text&&""!=c.message.text&&(d=c.message.text),null!=c.message.type&&void 0!=c.message.type&&""!=c.message.type&&(a=c.message.type)):void 0!=c.data&&null!=c.data&&null!=c.data.message&&(null!=c.data.message.text&&void 0!=c.data.message.text&&""!=c.data.message.text&&(d=c.data.message.text),void 0!=c.data.message.type&&null!=c.data.message.type&&""!=c.data.message.type&&(a=c.data.message.type))),this.message([b,d],a)},message:function(a,b){var c,d;2==a.length&&null!=a[1]&&void 0!=a[1]?(c=a[0],d=a[1]):(c=b,d=a[0]),$.pnotify({title:c,text:d,type:b})}};return a}),angular.module("mobbr.services.storage",["ngStorage"]).factory("userStorage",["$rootScope","$localStorage","$sessionStorage","$injector","$window",function(a,b,c,d,e){function f(c){!j&&c?(j=b.authorization,k=b.user,i(),console.log("external login"),a.$emit("userStorage:login-external",k)):!c&&j&&(h(),console.log("external logout"),a.$emit("userStorage:logout-external"))}function g(d,f){b.user=f,c.user=f,j||(j="Basic "+e.btoa(":"+f.password),b.authorization=j,i()),console.log("storage save"),a.$emit("userStorage:saved")}function h(){j=void 0,delete l.defaults.headers.common.Authorization,delete b.authorization,delete b.user,delete c.user,console.log("storage clear"),a.$emit("userStorage:cleared")}function i(){l.defaults.headers.common.Authorization=j}var j,k,l=l||d.get("$http");return a.$storage=b,a.$watch("$storage.authorization",f),a.$on("userSession:login",g),a.$on("userSession:logout",h),b.user||e.parent&&e.parent.postMessage&&(console.log("post logout message"),e.parent.postMessage("logout","*")),{sync:f,save:g,clear:h}}]);